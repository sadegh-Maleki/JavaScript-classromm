<!DOCTYPE html>
<html>
<head>
<title>promise</title>
<link rel="stylesheet" href="../styles.css">
</head>
<body>

<h1>promise</h1>
<ul>
    <li>
        
        <p><strong>Pending: </strong>Initial state of promise. This state represents that the promise has neither been fulfilled nor been rejected, it is in the pending state.</p>
    </li>
    <li>
        
        <p><strong>Fulfilled: </strong> This state represents that the promise has been fulfilled, meaning the async operation is completed.</p>
    </li>
    <li>
       
        <p> <strong>Rejected: </strong>This state represents that the promise has been rejected for some reason, meaning the async operation has failed.</p>
    </li>
    <li>
        
        <p><strong>Settled: </strong>This state represents that the promise has been either rejected or fulfilled.</p>
    </li>
</ul>
<div class="align-center">
    <img src="../promise.png">
</div>
<ul>
    <li>
        
        <p><strong>resolve</strong> is a function that will be called, when the async operation has been successfully completed.</p>
    </li>
    <li>
        
        <p><strong>reject</strong>is a function that will be called, when the async operation fails or if some error occurs.
        </p>
    </li>
    </ul>
    <div class="align-center">
        <img src="../then-catch.png">
    </div>
    <ul>
        <li>
            
            <p><strong>then()</strong>method is used to access the result when the promise is fulfilled.</p>
        </li>
        <li>
            
            <p><strong>catch()</strong>method is used to access the result/error when the promise is rejected.
            </p>
        </li>
        </ul>

<pre class="input-pre" id="input">
    function sumOfThreeElements(...elements){
        return new Promise((resolve,reject)=>{
          if(elements.length > 3 ){
            reject("Only three elements or less are allowed");
          }
          else{
            let sum = 0;
            let i = 0;
            while(i < elements.length){
              sum += elements[i];
              i++;
            }
            resolve("Sum has been calculated: "+sum);
          }
        })
      }
    </pre>
    <br/>
    <br/>
    <pre class="input-pre" id="input">
//  consume the promise

      sumOfThreeElements(4, 5, 6)
.then(result=> console.log(result))
.catch(error=> console.log(error));
// In the code above, the promise is fulfilled so the then() method gets executed

sumOfThreeElements(7, 0, 33, 41)
.then(result => console.log(result))
.catch(error=> console.log(error));
// In the code above, the promise is rejected hence the catch() method gets executed

</pre>
</body>
</html>
<script src="./promises.js"></script>
